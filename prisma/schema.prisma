// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int           @id @default(autoincrement())
  firstName     String
  lastName      String
  dateOfBirth   DateTime      @map("date_of_birth")
  gender        String
  role          Role
  phone         String?
  email         String      @unique 
  address       String?
  password      String
  resetToken    String?
  appointmentsPatient Appointments[] @relation("PatientAppointments")
  appointmentsEmployee Appointments[] @relation("EmployeeAppointments")
  attendancesPatient Attendances[] @relation("PatientAttendances")
  attendancesEmployee Attendances[] @relation("EmployeeAttendances")

  @@map("user")
}

enum Role {
  Doctor
  Staff
  Patient
}

model Appointments {
  id              Int            @id @default(autoincrement())
  patientId       Int            @map("patient_id")
  employeeId      Int            @map("employee_id")
  appointmentDate DateTime       @map("appointment_date")
  diagnosis       String?          @db.Text
  notes           String?          @db.Text
  patient         User           @relation("PatientAppointments", fields: [patientId], references: [id])
  employee        User           @relation("EmployeeAppointments", fields: [employeeId], references: [id])
  prescriptions   Prescriptions[]
  @@map("appointments")
}

model Prescriptions {
  id             Int          @id @default(autoincrement())
  appointmentId  Int          @map("appointment_id")
  medicationName String       @map("medication_name")
  dosage         String
  instructions   String?      @db.Text
  appointment    Appointments @relation(fields: [appointmentId], references: [id])

  @@map("prescriptions")
}

model Attendances {
  id             Int           @id @default(autoincrement())
  patientsId     Int           @map("patients_id")
  employeeId     Int           @map("employee_id")
  urgencyLevel   UrgencyLevel  @map("urgency_level")
  observations   String?       @db.Text
  patient        User          @relation("PatientAttendances", fields: [patientsId], references: [id])
  employee       User          @relation("EmployeeAttendances", fields: [employeeId], references: [id])

  @@map("attendances")
}

enum UrgencyLevel {
  Low
  Medium
  High
  Emergency
}